using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.Services;
using System.Web.UI;
using System.Web.UI.WebControls;
using FMS.Source.Classes;
using FMS_BusinessObjects;
using Telerik.Web.UI;

namespace FMS.Child
{
    public partial class Vehicles : System.Web.UI.Page
    {

        //string format = "";
        #region filter menu items

        List<filterMenu> vehicleFilterMenu = new List<filterMenu>();
        string[] filter_text = {  "VID",
                                  "Vehicle",
                                  "Model"};
                                  //,
                                  //"Type",
                                  //"Color",
                                  //"Volume",
                                  //"Manufacturer",
                                  //"Engine No.",
                                  //"Chasis No.",
                                  //"Manufacturing Year",
                                  //"Chasis Weight",
                                  //"Body Wieght",
                                  //"Gross Weight",
                                  //"Reg. Expiry Date",
                                  //"Registration No.",                                 
                                  //"Seat No.",                                                                  
                                  //"Remarks",
                                  //"Bluecard",
                                  //"Road Tax"};

        string[] filter_value = { "vid",
                                  "vehicle_name",
                                  "vhc_model"};
                                  //,
                                  //"body_type",
                                  //"color",
                                  //"cc",
                                  //"manufacturer",
                                  //"engine_no",
                                  //"chasis_no",
                                  //"year_make",
                                  //"chasis_wt",
                                  //"body_wt",
                                  //"gross_wt",
                                  //"registration_expiry_date",
                                  //"registration_no",
                                  //"seating_no",
                                  //"remarks",
                                  //"bluecard",
                                  //"road_tax"};

        #endregion

        protected void Page_Load(object sender, EventArgs e)
        {


            #region filter items

            for (int i = 0; i < filter_value.Count(); i++)
            {
                vehicleFilterMenu.Add(new filterMenu
                {
                    DataText = filter_text[i],
                    DataValue = filter_value[i]
                });
            }

            rcmb_filter.DataSource = vehicleFilterMenu;
            if (IsPostBack == false)
            {
                rcmb_filter.DataBind();
            }
            #endregion

            if (((user_loginfo)Session["LoggedUser"]) == null)
            {
                Response.Redirect("/Login.aspx");
            }

            if (!IsPostBack)
            {
                VHCDetailsPanel.Visible = false;
                VHCInsurancePanel.Visible = false;
            }

            #region permission
            //Permission perm = new Permission();
            //refPermission modPermission = perm.get_permission_status_module("vehicles", ((user_loginfo)Session["LoggedUser"]).role_id);


            //if (modPermission.create == false)
            //{
            //    RadVehicle.MasterTableView.CommandItemDisplay = GridCommandItemDisplay.None;
            //}

            //if (modPermission.delete == false)
            //{
            //    RadVehicle.AutoGenerateDeleteColumn = false;
            //}

            //if (modPermission.modify == false)
            //{
            //    RadVehicle.AutoGenerateEditColumn = false;
            //}

            //if (modPermission.view == false)
            //{
            //    Response.Redirect("/Source/Child/Error_Page.aspx");
            //}

            #endregion
        }

        protected void RadVehicle_ItemCommand(object sender, GridCommandEventArgs e)
        {

            if (e.CommandName == "Track")
            {
                GridDataItem dataItem = e.Item as GridDataItem;

                string vid = dataItem.GetDataKeyValue("vid").ToString();
                Response.Redirect("/Source/Child/DETTracking.aspx?vid=" + vid + "");
            }

            if (e.CommandName == "Select")
            {
                Permission perm = new Permission();
                if (perm.is_allowed("vehicles", "view", Session["role_id"].ToString().strToInt()) == true)
                {

                    Vehicle veh = new Vehicle();
                    GridDataItem dataItem = e.Item as GridDataItem;

                    int strVID = Convert.ToInt32(dataItem.GetDataKeyValue("vid").ToString());

                    DetVehicle.DataSource = veh.get_vehicle_detail(Convert.ToInt32(strVID));
                    DetVehicle.DataBind();

                    veh = new Vehicle();
                    if (veh.has_vehicle_image(strVID) == true)
                    {
                        imgVehicle.ImageUrl = "~/Source/Child/VehicleImageHandler.ashx?type=vehicle&id=" + strVID;
                    }
                    else
                    {
                        imgVehicle.ImageUrl = Page.ResolveUrl("~/Design/vehicle_pg_images/VHC_unavailable.png");
                    }


                    Session["strVID"] = strVID;
                    load_insurance(strVID);
                    load_service(strVID);

                    VHCDetailsPanel.Visible = true;
                    VHCInsurancePanel.Visible = true;
                }
                else
                {
                    ScriptManager.RegisterStartupScript(Page, Page.GetType(), "View Vehicle Details", "alert('You are not allowed to view Vehicle Details!');", true);
                }
            }

            if (e.CommandName == "Flag")
            {
                GridDataItem item = e.Item as GridDataItem;
                string vhc_id = item.GetDataKeyValue("vid").ToString();
                string strflagged = item["flag"].Text;
                bool flagged = (strflagged == "True" || strflagged == "1") ? false : true; //intended to be interchanged because this will be the new status
                Vehicle vhc = new Vehicle();
                vhc.update_vehicle_flag(flagged, string.Empty, Convert.ToInt32(vhc_id));
                RadVehicle.Rebind();
            }
        }

        private void load_insurance(int _vid)
        {
            Insurance ins = new Insurance();
            DetInsurance.DataSource = ins.get_vehicle_insurance(_vid);
            DetInsurance.DataBind();
        }

        private void load_service(int _vid)
        {
            Service srv = new Service();
            RadServices.DataSource = srv.get_vehicle_service(_vid);
            RadServices.Rebind();
        }

        //Filter Methods
        #region filter

        protected void btnResetFilter_Click(object sender, EventArgs e)
        {
            tbx_filter.Text = "";
            Vehicle veh = new Vehicle();
            RadVehicle.DataSource = veh.get_user_vehicles(Session["parent_id"].ToString().strToInt());
            RadVehicle.Rebind();
        }

        protected void RadButton1_Click(object sender, EventArgs e)
        {
            Vehicle veh = new Vehicle();
            RadVehicle.DataSource = veh.filter_vehicle(rcmb_filter.SelectedValue, tbx_filter.Text, Session["parent_id"].ToString());
            RadVehicle.Rebind();
        }

        #endregion

        protected void RadVehicle_PreRender(object sender, EventArgs e)
        {
            if (RadVehicle.EditItems.Count > 0)
            {
                foreach (GridDataItem item in RadVehicle.MasterTableView.Items)
                {
                    if (item != RadVehicle.EditItems[0])
                    {
                        item.Visible = false;
                    }
                }
            }
        }

        string svid = "";
        string vidFlag = "";
        protected void RadVehicle_ItemCreated(object sender, GridItemEventArgs e)
        {
            if (e.Item is GridDataItem)
            {
                Permission perm = new Permission();
                if (perm.is_allowed("Tracking", "view", Session["role_id"].ToString().strToInt()) == true)
                {
                    HyperLink TrackLink = (HyperLink)e.Item.FindControl("TrackLink");
                    TrackLink.Attributes["href"] = "javascript:void(0);";
                    svid = e.Item.OwnerTableView.DataKeyValues[e.Item.ItemIndex]["vid"].ToString();

                    TrackLink.Attributes["onclick"] = String.Format("return ShowEditFormTrack('{0}','{1}');", svid, e.Item.ItemIndex);
                }
            }
        }



        protected void RadVehicle_NeedDataSource(object sender, GridNeedDataSourceEventArgs e)
        {
            Vehicle veh = new Vehicle();

            RadVehicle.DataSource = veh.get_user_vehicles(Session["parent_id"].ToString().strToInt());
        }

        protected void RadServices_ItemCommand(object sender, GridCommandEventArgs e)
        {
            if (e.CommandName == "Select")
            {

                GridDataItem dataItem = e.Item as GridDataItem;
                string vhc_srv_id = dataItem.GetDataKeyValue("vhc_srv_id").ToString(); ;
                string url = "~/Source/Details/DETService.aspx?vhc_srv_id=" + vhc_srv_id + "&usr_id=" + Session["parent_id"].ToString();

            }
        }

        string ins_id = "";
        protected void RadServices_ItemCreated(object sender, GridItemEventArgs e)
        {
            if (e.Item is GridDataItem)
            {
                Permission perm = new Permission();
                HyperLink editLink = (HyperLink)e.Item.FindControl("EditLink");
                if (perm.is_allowed("service", "view", Session["role_id"].ToString().strToInt()) == true)
                {
                    editLink.Attributes["href"] = "javascript:void(0);";
                    EditVHCInsuranceLink.Attributes["href"] = "javascript:void(0);";
                    svid = e.Item.OwnerTableView.DataKeyValues[e.Item.ItemIndex]["vhc_srv_id"].ToString();

                    editLink.Attributes["onclick"] = String.Format("return ShowEditForm('{0}','{1}');", svid, e.Item.ItemIndex);
                }
            }
        }

        protected void RadAjaxManager1_AjaxRequest(object sender, AjaxRequestEventArgs e)
        {
            try
            {
                Service srv = new Service();
                RadServices.DataSource = srv.get_vehicle_service(Session["strVID"].ToString().strToInt());
                RadServices.Rebind();
            }
            catch (Exception ex)
            {
            }

            Vehicle veh = new Vehicle();
            DetVehicle.DataSource = veh.get_vehicle_detail(Session["strVID"].ToString().strToInt());
            DetVehicle.DataBind();

            load_insurance(Session["strVID"].ToString().strToInt());

            veh = new Vehicle();
            RadVehicle.DataSource = veh.get_user_vehicles(Session["parent_id"].ToString().strToInt());
            RadVehicle.DataBind();

            VHCDetailsPanel.Visible = true;
            VHCInsurancePanel.Visible = true;

            veh = new Vehicle();
            if (veh.has_vehicle_image(Session["strVID"].ToString().strToInt()) == true)
            {
                imgVehicle.ImageUrl = "~/Source/Child/VehicleImageHandler.ashx?type=vehicle&id=" + Session["strVID"].ToString().strToInt() + "&time=" + DateTime.Now.Ticks.ToString();
            }
            else
            {
                imgVehicle.ImageUrl = Page.ResolveUrl("~/Design/vehicle_pg_images/VHC_unavailable.png");
            }
            imgVehicle.DataBind();
        }

        protected void DetVehicle_ItemCreated(object sender, EventArgs e)
        {
            Permission perm = new Permission();
            if (perm.is_allowed("vehicle", "modify", Session["role_id"].ToString().strToInt()) == false)
            {
                EditVHCLink.Visible = false;
            }
            else
            {
                EditVHCLink.Attributes["href"] = "javascript:void(0);";
                svid = DetVehicle.DataKey.Value.ToString();
                //svid = e.Item.OwnerTableView.DataKeyValues[e.Item.ItemIndex]["vid"].ToString();
                EditVHCLink.Attributes["onclick"] = String.Format("return ShowEditFormVehicle('{0}');", svid);
            }
        }

        protected void DetInsurance_ItemCreated(object sender, EventArgs e)
        {
            Permission perm = new Permission();
            if (perm.is_allowed("vehicle", "modify", Session["role_id"].ToString().strToInt()) == false)
            {
                EditVHCInsuranceLink.Visible = false;
            }
            else
            {
                try
                {
                    EditVHCInsuranceLink.Attributes["href"] = "javascript:void(0);";
                    ins_id = DetInsurance.DataKey.Value.ToString();
                    //svid = e.Item.OwnerTableView.DataKeyValues[e.Item.ItemIndex]["vid"].ToString();
                    EditVHCInsuranceLink.Attributes["onclick"] = String.Format("return ShowEditFormInsurance('{0}');", ins_id);
                    EditVHCInsuranceLink.Visible = true;
                }
                catch (Exception ex)
                {
                    EditVHCInsuranceLink.Visible = false;
                }
            }
        }

        protected void RadVehicle_ItemDataBound(object sender, GridItemEventArgs e)
        {
            if (e.Item is GridDataItem)
            {
                GridDataItem item = (GridDataItem)e.Item;
                string strflagged = item["flag"].Text;
                bool flagged = (strflagged == "True" || strflagged == "1") ? true : false;
                if (flagged)
                {
                    ImageButton img = (ImageButton)item["btn_flag"].Controls[0];
                    //ImageButton imgFlag = (ImageButton)item["lnk_flag"].Controls[0];
                    img.ImageUrl = "~/Design/flagging_images/flagged.png";
                    img.ToolTip = "Unflag";
                    //imgFlag.ImageUrl = "~/Design/flagging_images/flagged.png";
                    //imgFlag.ToolTip = "Unflag";
                }
                Permission perm = new Permission();
                if (perm.is_allowed("vehicle", "modify", Session["role_id"].ToString().strToInt()) == true)
                {
                    if (!flagged)
                    {
                        ImageButton imgFlag = (ImageButton)item["btn_flag"].Controls[0];
                        imgFlag.Attributes["href"] = "javascript:void(0);";
                        imgFlag.CommandName = string.Empty;
                        vidFlag = e.Item.OwnerTableView.DataKeyValues[e.Item.ItemIndex]["vid"].ToString();
                        imgFlag.Attributes["onclick"] = String.Format("return ShowFlagForm('{0}','VHC');", vidFlag);
                    }
                    else
                    {
                        ImageButton imgFlag = (ImageButton)item["btn_flag"].Controls[0];
                        imgFlag.Attributes["href"] = "return true;";
                        imgFlag.CommandName = "Flag";
                    }
                }
            }

        }
    }
}