using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Telerik.Web.UI;
using FMS.Source.Classes;
using FMS_BusinessObjects;
using Telerik.Web.UI.Grid;
namespace FMS.Source.Child
{
    public partial class User_Access : System.Web.UI.Page
    {

        protected void Page_Load(object sender, EventArgs e)
        {
            //Redirect if session has expired
            if (((user_loginfo)Session["LoggedUser"]) == null)
            {
                Response.Redirect("/Login.aspx");
            }



            //Enable/disable pages based on user permission
            //#region user permission
            //Permission perm = new Permission();
            //perm.parent_id = Convert.ToInt32(Session["parent_id"]);
            //perm.appendModulePermission();
            //refPermission modPermission = perm.get_permission_status_module("accounts", ((user_loginfo)Session["LoggedUser"]).role_id);
            //if (modPermission.create == false)
            //{
            //    RadUserAccess.MasterTableView.CommandItemDisplay = GridCommandItemDisplay.None;
            //}

            //if (modPermission.delete == false)
            //{
            //    RadUserAccess.MasterTableView.GetColumn("Delete_Column").Display = false;
            //    RadUserAccess.AutoGenerateDeleteColumn = false;
            //}

            //if (modPermission.modify == false)
            //{
            //    RadUserAccess.AutoGenerateEditColumn = false;
            //}

            //if (modPermission.view == false)
            //{
            //    Response.Redirect("/Source/Child/Error_Page.aspx");
            //}
            //#endregion
        }

        //Manually commit on Insert/Edit/Delete changes
        protected void RadUserAccess_ItemCommand(object sender, GridCommandEventArgs e)
        {

            if (e.CommandName == RadGrid.PerformInsertCommandName)
            {
                GridEditFormItem editedItem = e.Item as GridEditFormItem;
                RadTextBox username = (RadTextBox)editedItem.FindControl("tbx_Username");
                RadTextBox user_id = (RadTextBox)editedItem.FindControl("tbx_User_ID");
                RadTextBox password = (RadTextBox)editedItem.FindControl("tbx_Password");
                RadComboBox parent = (RadComboBox)editedItem.FindControl("rcmbParent");
                RadComboBox role = (RadComboBox)editedItem.FindControl("rcmbRole");
                //CheckBox active = (CheckBox)editedItem.FindControl("cbx_Active");

                User newUser = new User();
                tblChildUser new_child = new tblChildUser()
                {
                    role_id = role.SelectedValue.strToInt(),
                    parent_id = parent.SelectedValue.strToInt(),
                    password = password.Text,
                    username = username.Text,
                    active = true
                };
                if (newUser.add_user(new_child) == false)
                { ScriptManager.RegisterStartupScript(Page, Page.GetType(), "Duplicate Username", "alert('Please choose a different username!');", true); }
            }

            if (e.CommandName == RadGrid.UpdateCommandName)
            {
                GridEditFormItem editedItem = e.Item as GridEditFormItem;
                RadTextBox username = (RadTextBox)editedItem.FindControl("tbx_Username");
                RadTextBox user_id = (RadTextBox)editedItem.FindControl("tbx_User_ID");
                RadTextBox password = (RadTextBox)editedItem.FindControl("tbx_Password");
                RadComboBox parent = (RadComboBox)editedItem.FindControl("rcmbParent");
                RadComboBox role = (RadComboBox)editedItem.FindControl("rcmbRole");
                //CheckBox active = (CheckBox)editedItem.FindControl("cbx_Active");

                User newUser = new User();
                tblChildUser new_child = new tblChildUser()
                {
                    role_id = role.SelectedValue.strToInt(),
                    parent_id = parent.SelectedValue.strToInt(),
                    password = password.Text,
                    username = username.Text,
                    active = true
                };

                if (newUser.update_user(new_child, editedItem.GetDataKeyValue("child_id").ToString().strToInt()) == false)
                { ScriptManager.RegisterStartupScript(Page, Page.GetType(), "Duplicate Username", "alert('Please choose a different username!');", true); }
            }

            if (e.CommandName == "Delete")
            {
                GridDataItem dataItem = e.Item as GridDataItem;
                string child_id = dataItem.GetDataKeyValue("child_id").ToString();
                User newUser = new User();
                newUser.delete_user(Convert.ToInt32(child_id));
            }
        }

        //protected void RadUserAccess_ItemCreated(object sender, GridItemEventArgs e)
        //{
        //    if (e.Item is GridEditableItem && e.Item.IsInEditMode && e.Item.OwnerTableView.Name == "dt_Permissions")
        //    {
        //        if (e.Item is GridEditFormInsertItem || e.Item is GridDataInsertItem)
        //        {
        //            GridEditFormItem editedItem = e.Item as GridEditFormItem;
        //            RadComboBox module = (RadComboBox)editedItem.FindControl("rcmb_mod_id");

        //            GridDataItem item = (GridDataItem)e.Item.OwnerTableView.ParentItem;
        //            string usr = item["child_id"].Text;

        //            Permission per = new Permission();
        //            //module.DataSource = per.get_user_non_module(Convert.ToInt32(usr));
        //            //module.DataBind();
        //        }
        //        else
        //        {
        //            // edit item
        //        }
        //    }
        //}

        //protected void RadUserAccess_PreRender(object sender, EventArgs e)
        //{
        //    if (RadUserAccess.EditItems.Count > 0)
        //    {
        //        foreach (GridDataItem item in RadUserAccess.MasterTableView.Items)
        //        {
        //            if (item != RadUserAccess.EditItems[0])
        //            {
        //                item.Visible = false;
        //            }
        //        }
        //    }
        //}
    }
}