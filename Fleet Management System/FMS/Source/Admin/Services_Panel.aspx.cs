using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using FMS.Source.Classes;
using FMS_BusinessObjects;
using Telerik.Web.UI;

namespace FMS.Source.Child
{
    public partial class Services_Panel : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            //Redirect if session has expired
            if (((user_loginfo)Session["LoggedUser"]) == null)
            {
                Response.Redirect("/Login.aspx");
            }

            //Enable/disable pages based on user permission
            //#region user permission
            //Permission perm = new Permission();
            //refPermission modPermission = perm.get_permission_status_module("accounts", ((user_loginfo)Session["LoggedUser"]).role_id);
            //if (modPermission.create == false)
            //{
            //    RadGrid1.MasterTableView.CommandItemDisplay = GridCommandItemDisplay.None;
            //}

            //if (modPermission.delete == false)
            //{
            //    //RadGrid1.MasterTableView.GetColumn("Delete_Column").Display = false;
            //    RadGrid1.AutoGenerateDeleteColumn = false;
            //}

            //if (modPermission.modify == false)
            //{
            //    RadGrid1.AutoGenerateEditColumn = false;
            //}

            //if (modPermission.view == false)
            //{
            //    Response.Redirect("/Source/Child/Error_Page.aspx");
            //}
            //#endregion
        }

        protected void RadGrid1_ItemCommand(object sender, GridCommandEventArgs e)
        {
            FMS_DBDataContext datacontext = new FMS_DBDataContext();
            if (e.CommandName == RadGrid.UpdateCommandName)
            {
                using (datacontext)
                {
                    GridEditableItem editItem = e.Item as GridEditableItem;

                    RadTextBox service = (RadTextBox)editItem.FindControl("tbxService");
                    RadTextBox srv_id = (RadTextBox)editItem.FindControl("tbxSrvid");
                    refService srv = datacontext.refServices.Where(x => x.srv_id == Convert.ToInt32(srv_id.Text)).First();
                    string newService = service.Text.Trim().ToLower();
                    int _parent = Convert.ToInt32(Session["parent_id"].ToString());
                    if (datacontext.refServices.Where(x => x.service.ToLower().Contains(newService) && x.srv_id != Convert.ToInt32(srv_id.Text) && x.usr_id == _parent).ToList().Count() == 0)
                    {
                        srv.service = service.Text;
                        datacontext.SubmitChanges();
                        RadGrid1.MasterTableView.ClearEditItems();
                    }
                    else
                    {
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "Duplicate", "alert('Duplicate service name, please choose another service name.');", true);
                    }

                }

            }

            if (e.CommandName == RadGrid.PerformInsertCommandName)
            {
                GridEditableItem editItem = e.Item as GridEditableItem;
                RadTextBox service = (RadTextBox)editItem.FindControl("tbxService");
                RadTextBox srv_id = (RadTextBox)editItem.FindControl("tbxSrvid");

                string newService = service.Text.Trim().ToLower();
                int _parent = Convert.ToInt32(Session["parent_id"].ToString());
                if (datacontext.refServices.Where(x => x.service.Trim().ToLower().Contains(newService) && x.usr_id == _parent).Count() == 0)
                {
                    refService srv = new refService()
                    {
                        usr_id = Convert.ToInt32(Session["parent_id"]),
                        service = service.Text.Trim(),
                        active = true
                    };

                    datacontext.refServices.InsertOnSubmit(srv);
                    datacontext.SubmitChanges();

                    RadGrid1.Rebind();
                }
                else
                {
                    Page.ClientScript.RegisterStartupScript(this.GetType(), "Duplicate", "alert('Duplicate service name, please choose another service name.');", true);
                }


            }
        }

        protected void RadGrid1_PreRender(object sender, EventArgs e)
        {
            if (RadGrid1.EditItems.Count > 0)
            {
                foreach (GridDataItem item in RadGrid1.MasterTableView.Items)
                {
                    if (item != RadGrid1.EditItems[0])
                    {
                        item.Visible = false;
                    }
                }
            }
        }

    }
}